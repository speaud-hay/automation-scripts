user select github repo
\_if...fi (get user info and special considerations per repo if exist)
-\_prep github repo (add option to merge branches)
--\_ssh... (is based on selected repo?)
----\_mkdir <YYYYMMDD-USER> backup files for current root
----\_then move dir to where?
----\_clean root and pull in selected repo (gitignore?)
----\_log event/status/etc and notify people via email [foreach...(heredoc | echo 'Message body goes here' | mail -s 'subject line goes here' <array of people's email to notify>)]
----\_close connection / exit

\/

objects
\_user
\_repo
\_server
\_notification
\_error handler

\/ user input

printf '$t Enter the name of the repo'
read repo

stripRepo=( $(echo $repo | grep -o '^https\:\/\/github\.com\/HayGroup\/[\w|\W]+\.git$') )

# the repo name =  ${stripRepo[0]}

\/

array_name=(value1 ... valuen)

for k in "${!a[@]}"; do
  echo "$k -> ${a[$k]}"
done	


#!/usr/lib/oobash.sh

# Import Car class
`import Car`

# Create an "object"
new Car as car

# Set a variable
car.speed 100

# Call a function
car.drive